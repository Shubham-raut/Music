[{"/media/shubham/Workspace/GreyAtom/Repositories/music/src/App.js":"1","/media/shubham/Workspace/GreyAtom/Repositories/music/src/serviceWorker.js":"2","/media/shubham/Workspace/GreyAtom/Repositories/music/src/index.js":"3","/media/shubham/Workspace/GreyAtom/Repositories/music/src/context/StateProvider.js":"4","/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/Login/Login.js":"5","/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/Sidebar/Sidebar.js":"6","/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/SidebarOption/SidebarOption.js":"7","/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/Header/Header.js":"8","/media/shubham/Workspace/GreyAtom/Repositories/music/src/config/spotify.js":"9","/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/Player/Player.js":"10","/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/SongRow/SongRow.js":"11","/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/Footer/Footer.js":"12","/media/shubham/Workspace/GreyAtom/Repositories/music/src/context/reducer.js":"13"},{"size":2034,"mtime":1606731371106,"results":"14","hashOfConfig":"15"},{"size":5086,"mtime":1606598996554,"results":"16","hashOfConfig":"15"},{"size":820,"mtime":1606661586853,"results":"17","hashOfConfig":"15"},{"size":364,"mtime":1606731372556,"results":"18","hashOfConfig":"15"},{"size":717,"mtime":1606731371969,"results":"19","hashOfConfig":"15"},{"size":1183,"mtime":1606731372145,"results":"20","hashOfConfig":"15"},{"size":341,"mtime":1606731372221,"results":"21","hashOfConfig":"15"},{"size":1829,"mtime":1606734072081,"results":"22","hashOfConfig":"15"},{"size":1046,"mtime":1606733110910,"results":"23","hashOfConfig":"15"},{"size":418,"mtime":1606731372072,"results":"24","hashOfConfig":"15"},{"size":579,"mtime":1606731372448,"results":"25","hashOfConfig":"15"},{"size":3208,"mtime":1606734058366,"results":"26","hashOfConfig":"15"},{"size":1472,"mtime":1606734079358,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"hwf5um",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/shubham/Workspace/GreyAtom/Repositories/music/src/App.js",["60"],"import React, { useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from \"./context/StateProvider\";\nimport Player from \"./component/Player/Player\";\nimport { getTokenFromResponse } from \"./config/spotify\";\nimport \"./App.css\";\nimport Login from \"./component/Login/Login\";\nconst s = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token, user }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // Set token\n    let _token;\n\n    if (token) {\n      _token = token;\n    }\n    else {\n      const hash = getTokenFromResponse();\n      window.location.hash = \"\";\n      _token = hash.access_token;\n    }\n\n    if (_token) {\n      s.setAccessToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      localStorage.setItem('token', _token);\n\n      s.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n\n        s.getPlaylist(\"37i9dQZEVXcJZyENOWUFo7\").then((response) =>\n          dispatch({\n            type: \"SET_DISCOVER_WEEKLY\",\n            discover_weekly: response,\n          })\n        );\n\n        s.getMyTopArtists().then((response) =>\n          dispatch({\n            type: \"SET_TOP_ARTISTS\",\n            top_artists: response,\n          })\n        );\n\n        dispatch({\n          type: \"SET_SPOTIFY\",\n          spotify: s,\n        });\n\n        s.getUserPlaylists().then((playlists) => {\n          dispatch({\n            type: \"SET_PLAYLISTS\",\n            playlists,\n          });\n        });\n      })\n        .catch(err => {\n          if (err.status === 401) {\n            localStorage.removeItem('token');\n            window.location.reload();\n          }\n        });\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   s.getCategoryPlaylists('toplists')\n  //     .then((data) => {\n  //       console.log(data);\n  //     })\n  // }, []);\n\n  return (\n    <div className=\"app\">\n      {(!token && !user) ?\n        <Login /> :\n        <Player spotify={s} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n",["61","62"],"/media/shubham/Workspace/GreyAtom/Repositories/music/src/serviceWorker.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/music/src/index.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/music/src/context/StateProvider.js",[],["63","64"],"/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/Login/Login.js",["65"],"import React from \"react\";\nimport \"./Login.css\";\nimport SocialFollow from \"../SocialFollow/SocialFollow\";\nimport { accessUrl } from \"../../config/spotify\";\n\nfunction Login() {\n  return (\n    <div>\n      <div className=\"login\">\n        <h3 className=\"Header\">SPOTIFY</h3>\n        <div className=\"NavBar\">\n          <ul>\n            <li>Search</li>\n            <li>\n              <a style={{ color: \" #1db954\" }}>About</a>\n            </li>\n            <li>Contact Us</li>\n          </ul>\n        </div>\n        <button className=\"login1\">\n          <a href={accessUrl}>LOGIN TO SPOTIFY</a>\n        </button>\n        <div>\n          <SocialFollow />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/Sidebar/Sidebar.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/SidebarOption/SidebarOption.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/Header/Header.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/music/src/config/spotify.js",[],["66","67"],"/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/Player/Player.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/SongRow/SongRow.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/music/src/component/Footer/Footer.js",["68"],"import React, { useEffect } from \"react\";\nimport { useStateValue } from \"../../context/StateProvider\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport \"./Footer.css\";\nimport { Grid, Slider } from \"@material-ui/core\";\n\nfunction Footer({ spotify }) {\n  const [{ item, playing }, dispatch] = useStateValue();\n  // console.log(spotify);\n  let activeSong = document.getElementById('songPlay');\n  useEffect(() => {\n    activeSong = document.getElementById('songPlay');\n    if (activeSong) {\n      if (playing) {\n        activeSong.play();\n      }\n      else {\n        activeSong.pause();\n      }\n    }\n  }, [playing]);\n\n  const handlePlayPause = () => {\n    // console.log(activeSong)\n    if (!!activeSong) {\n      if (playing) {\n        activeSong.pause();\n        dispatch({\n          type: \"SET_PLAYING\",\n          playing: false,\n        });\n      } else {\n        activeSong.play();\n        dispatch({\n          type: \"SET_PLAYING\",\n          playing: true,\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__left\">\n        <img\n          className=\"footer__albumLogo\"\n          src={item?.album.images[0].url}\n          alt={item?.name}\n        />\n        {item ? (\n          <div className=\"footer__songInfo\">\n            <h4>{item.name}</h4>\n            <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\n          </div>\n        ) : (\n            <div className=\"footer__songInfo\">\n              <h4>No song is playing</h4>\n              <p>...</p>\n            </div>\n          )}\n      </div>\n\n      <div className=\"footer__center\">\n        <ShuffleIcon className=\"footer__green\" />\n        <SkipPreviousIcon className=\"footer__icon\" />\n        {playing ? (\n          <PauseCircleOutlineIcon\n            onClick={handlePlayPause}\n            fontSize=\"large\"\n            className=\"footer__icon\"\n          />\n        ) : (\n            <PlayCircleOutlineIcon\n              onClick={handlePlayPause}\n              fontSize=\"large\"\n              className=\"footer__icon\"\n            />\n          )}\n        {item ?\n          <audio\n            id=\"songPlay\"\n            src={item.preview_url}\n            type=\"audio/mp3\"\n            controls autoPlay /> :\n          null\n        }\n        <SkipNextIcon className=\"footer__icon\" />\n        <RepeatIcon className=\"footer__green\" />\n      </div>\n      <div className=\"footer__right\">\n        <Grid container spacing={2}>\n          <Grid item>\n            <PlaylistPlayIcon />\n          </Grid>\n          <Grid item>\n            <VolumeDownIcon />\n          </Grid>\n          <Grid item xs>\n            <Slider aria-labelledby=\"continuous-slider\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","/media/shubham/Workspace/GreyAtom/Repositories/music/src/context/reducer.js",[],{"ruleId":"69","severity":1,"message":"70","line":73,"column":6,"nodeType":"71","endLine":73,"endColumn":8,"suggestions":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":15,"column":15,"nodeType":"81","endLine":15,"endColumn":48},{"ruleId":"73","replacedBy":"82"},{"ruleId":"75","replacedBy":"83"},{"ruleId":"69","severity":1,"message":"84","line":19,"column":18,"nodeType":"85","endLine":19,"endColumn":53},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["86"],"no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["87"],["88"],"Assignments to the 'activeSong' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",{"desc":"89","fix":"90"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch, token]",{"range":"91","text":"92"},[1718,1720],"[dispatch, token]"]